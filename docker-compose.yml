services:
  # Frontend container (Next.js with SSR)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Serve directly from Node.js SSR
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://backend:5000  # Ensure frontend can call backend

  # Backend container (Express.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Change backend to 4000 externally
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - DB_HOST=crossover.proxy.rlwy.net
      - DB_USER=root
      - DB_PASSWORD=JEYAVEcLFYEEPizmSBFeImGMXgVKLtjT
      - DB_NAME=railway
      - DB_PORT=14600
      - LOG_DIR=/app/logs
      - LOG_FILE_PATH=/app/logs/library-app.log
      - API_KEY=secureapikey123
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./backend/config:/app/config
    restart: unless-stopped

  # Database container
  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: JEYAVEcLFYEEPizmSBFeImGMXgVKLtjT
      MYSQL_DATABASE: railway
    ports:
      - "14600:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/config:/etc/mysql/conf.d

volumes:
  db_data:
    driver: local
